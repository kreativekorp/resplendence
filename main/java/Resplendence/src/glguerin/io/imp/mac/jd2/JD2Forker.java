/*** Copyright 1998, 1999, 2001 by Gregory L. Guerin.** Terms of use:**  - Briefly: OPEN SOURCE under Artistic License -- credit fairly, use freely, alter carefully.**  - Fully: <http://www.amug.org/~glguerin/sw/artistic-license.html>** This file is from the MacBinary Toolkit for Java:**   <http://www.amug.org/~glguerin/sw/#macbinary> */package glguerin.io.imp.mac.jd2;import java.io.*;import glguerin.io.*;import glguerin.io.imp.mac.*;// --- Revision History ---// 23Mar99 GLG  create sub-class of MacFileForker// 24Mar99 GLG  add resolved()// 26Mar99 GLG  name changes// 29Mar99 GLG  rework to use FSSpec and new CatalogAccessor methods// 29Mar99 GLG  add support for withComment flag to two methods// 30Mar99 GLG  rework comment support, removing withComment arg from setCatalogInfo()// 30Mar99 GLG  add selfResolve()// 01Apr99 GLG  add determined() for hacking around only// 05Apr99 GLG  add support for SecurityManager// 05Apr99 GLG  expand doc-comments// 06Apr99 GLG  add comments that setLock() isn't called by setCatalogInfo()// 13Apr99 GLG  remove all but minimal implementations for BaseForker super-class// 06Jun01 GLG  add support for default file-type and creator// 18Jun01 GLG  refactor to subclass FSForker/**** A JD2Forker is an implementation of FileForker for MRJ 2.1 or later,** which relies on JDirect-2 for native-code calls.** It should work on PowerPC Macs running a classical Mac OS version from 7.6.1 through 9.*.** It should also work under Classic on Mac OS X.**<p>** Use its fully-qualified class-name as the factory-name ** to FileForker.SetFactory(), and you'll get instances of this class when you** call FileForker.MakeOne().**** @author Gregory Guerin**** @see JD2Cat** @see JD2Comment** @see JD2Fork** @see JD2FSItem** @see JD2FSSpec*/public class JD2Forker  extends FSForker{	/**	** Vanilla constructor.	*/	public	JD2Forker()	{  		super();  	}	/** Make a concrete FSItem. */	protected FSItem	newFSItem()	{  return ( new JD2FSItem() );  }	private static int fileType = FileInfo.OSTYPE_UNKNOWN;	private static int fileCreator = FileInfo.OSTYPE_UNKNOWN;	/**	** Set the creator and file types that newly created files will have by default.	** Calling this method on any concrete FileForker instance sets the defaults for	** all concrete instances of the same class.	**<p>	** In this implementation, the built-in defaults are both set to FileInfo.OSTYPE_UNKNOWN.	*/	public void	setDefaultTypes( int defaultFileType, int defaultFileCreator )	{		fileType = defaultFileType;		fileCreator = defaultFileCreator;	}	/**	** Called by makeForkOutputStream() and makeForkRandomRW(),	** or anywhere else a file needs to be created.  NOT called when an existing	** file is merely truncated.	*/	public int	getDefaultFileType()	{  return ( fileType );  }	/**	** Called by makeForkOutputStream() and makeForkRandomRW(),	** or anywhere else a file needs to be created.  NOT called when an existing	** file is merely truncated.	*/	public int	getDefaultFileCreator()	{  return ( fileCreator );  }}